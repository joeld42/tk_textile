// test shader for playing around with the barycentric-coord
// blend mask in shadertoy.
void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    vec2 uv = fragCoord.xy / iResolution.xy;

    uv.y = 1.0 - uv.y;
    vec2 v0 = vec2( 1.0 - 0.5, 1.0 - 0.0 );
    vec2 v1 = vec2( 0.0 - 0.5, 1.0 - 0.0 );
    vec2 v2 = vec2( uv.x - 0.5,uv.y - 0.0 );
    
    float d00 = dot(v0, v0);
    float d01 = dot(v0, v1);
    float d11 = dot(v1, v1);
    float d20 = dot(v2, v0);
    float d21 = dot(v2, v1);
    float denom = d00*d11 - d01*d01;
    
    vec3 b = vec3( (d11*d20 - d01*d21) / denom,
                   (d00*d21 - d01*d20) / denom,
                    0.0 );
    b.z = 1.0 - b.x - b.y;
    
    
    if ( (b.x > 1.0) || (b.y > 1.0) || (b.z > 1.0)
        || (b.x < 0.0) || (b.y < 0.0) || (b.z < 0.0) )
    {
        fragColor = vec4(1,1,1,1);
    } else {
        float blendSharpness = 10.0;
        float a = smoothstep( 0.0, b.x, b.z );
        float b = smoothstep( 0.0, b.x, b.y );
        float x = pow(a*b, blendSharpness);
        fragColor = vec4( vec3(1.0,0.6,0.2)*x, 1.0 );
    }
}